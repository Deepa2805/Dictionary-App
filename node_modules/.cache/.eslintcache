[{"C:\\Users\\asus\\Desktop\\dictionary-app\\src\\index.js":"1","C:\\Users\\asus\\Desktop\\dictionary-app\\src\\reportWebVitals.js":"2","C:\\Users\\asus\\Desktop\\dictionary-app\\src\\App.js":"3","C:\\Users\\asus\\Desktop\\dictionary-app\\src\\store.js":"4","C:\\Users\\asus\\Desktop\\dictionary-app\\src\\HomePage\\HomePage.js":"5","C:\\Users\\asus\\Desktop\\dictionary-app\\src\\NavBar\\Nav.js":"6","C:\\Users\\asus\\Desktop\\dictionary-app\\src\\History\\History.js":"7","C:\\Users\\asus\\Desktop\\dictionary-app\\src\\reducers.js":"8","C:\\Users\\asus\\Desktop\\dictionary-app\\src\\actions.js":"9"},{"size":601,"mtime":1693765112450,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1693765112452,"results":"12","hashOfConfig":"11"},{"size":627,"mtime":1693765670248,"results":"13","hashOfConfig":"11"},{"size":243,"mtime":1693765112453,"results":"14","hashOfConfig":"11"},{"size":2996,"mtime":1693765112447,"results":"15","hashOfConfig":"11"},{"size":464,"mtime":1693765112449,"results":"16","hashOfConfig":"11"},{"size":554,"mtime":1693765112444,"results":"17","hashOfConfig":"11"},{"size":339,"mtime":1693765112452,"results":"18","hashOfConfig":"11"},{"size":98,"mtime":1693765112449,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pjges",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\asus\\Desktop\\dictionary-app\\src\\index.js",[],[],"C:\\Users\\asus\\Desktop\\dictionary-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\asus\\Desktop\\dictionary-app\\src\\App.js",["50"],[],"C:\\Users\\asus\\Desktop\\dictionary-app\\src\\store.js",[],[],"C:\\Users\\asus\\Desktop\\dictionary-app\\src\\HomePage\\HomePage.js",["51","52"],[],"import React, { useState } from \"react\";\r\nimport home from './home.css'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addToHistory } from \"../actions\";\r\n\r\nexport default function HomePage() {\r\n    const [word, setWord] = useState('');\r\n    const [defination, setDefination] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const [history, setHistory] = useState([])\r\n\r\n    const dispatch = useDispatch();\r\n    const meaning = async () => {\r\n        try {\r\n\r\n            const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            console.log(data);\r\n            setWord(data);\r\n            setWord('')\r\n            setDefination(data[0]);\r\n            setHistory((prevHistory) => [...prevHistory, defination]);\r\n            console.log(defination)\r\n            console.log(history)\r\n            dispatch(addToHistory({ word, definition: data[0] }));\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {defination !== undefined ?\r\n                <div className=\"body\">\r\n                    <div className=\"search\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={word}\r\n                            onChange={(e) => setWord(e.target.value)}\r\n                            autoFocus\r\n                            placeholder=\"search for a word\"\r\n                        />\r\n                        <button onClick={() => meaning()} disabled={!word}>Search</button>\r\n\r\n                    </div>\r\n                    {defination &&\r\n                        <div className=\"result\">\r\n                            <h2>{defination.word}</h2>\r\n                            <p>{defination.phonetic}</p>\r\n                            {defination.phonetics.map((element) => (\r\n                                <div key={element.text}>\r\n                                    <audio src={element.audio} controls />\r\n                                    <p>{element.text}</p>\r\n                                </div>\r\n                            ))}\r\n\r\n\r\n                            {defination && defination.meanings.map((meaning) => {\r\n                                return (<>\r\n                                    <h2>{meaning.partOfSpeech}</h2>\r\n                                    <p>{meaning.definitions[0].definition}</p>\r\n                                </>)\r\n                            })}\r\n\r\n                        </div>\r\n                    }\r\n                </div> :\r\n                <div>\r\n                    <p>Sorry friend, we couldn't find definitions for the word you were looking for</p>\r\n                </div>\r\n\r\n            }\r\n            {loading ?\r\n                <>\r\n                    <h1>Type a Word to Let me go,Pls</h1>\r\n                  \r\n                </> : \"\"}\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n","C:\\Users\\asus\\Desktop\\dictionary-app\\src\\NavBar\\Nav.js",["53"],[],"import React, { useState } from \"react\";\r\nimport './nav.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Nav() {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"nav\">\r\n                <h1>Dictionary App</h1>\r\n                <div className=\"link\">\r\n\r\n\r\n                    <Link to='/'>Home</Link>\r\n                    <Link to='/history'>History</Link>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\asus\\Desktop\\dictionary-app\\src\\History\\History.js",["54","55"],[],"import React, { useState } from \"react\";\r\nimport './history.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function History() {\r\n\r\n    const history = useSelector((state) => state.history.history)\r\n    return (\r\n        <div className=\"history\">\r\n            <h1>Searched History</h1>\r\n            <ul>\r\n                {history.map((item, index) => (\r\n                    <li key={index}>\r\n                        <a> {item.word} </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\asus\\Desktop\\dictionary-app\\src\\reducers.js",[],[],"C:\\Users\\asus\\Desktop\\dictionary-app\\src\\actions.js",[],[],{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":12},{"ruleId":"56","severity":1,"message":"61","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":21},{"ruleId":"56","severity":1,"message":"62","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"56","severity":1,"message":"62","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":14,"column":25,"nodeType":"65","endLine":14,"endColumn":28},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'home' is defined but never used.","'useSelector' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]